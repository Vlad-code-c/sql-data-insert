{"version":3,"sources":["components/Nav.js","jsonInfo.js","components/Insert.js","components/Sett.js","components/App.js","index.js"],"names":["Nav","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","tabIndex","aria-disabled","aria-haspopup","aria-labelledby","placeholder","data","names","last","cities","countries","Insert","Slider","Handle","min","max","Math","ceil","random","toFixed","d","m","this","numbers_random","length","require","writeContent","Result","props","getDontpadLink","tableName","value","columns","coll","i","radio","v","colNameValue","selectedOption","createTable","toLowerCase","insert","values","push","j","sliderRange","row","intRangeState","numbers","numbers_float","date","time","dateTime","selectedDataOption","getName","getLastName","getCity","getCountry","console","log","val","text","document","getElementsByClassName","readOnly","createSliderWithTooltip","Range","handle","dragging","index","restProps","prefixCls","overlay","visible","placement","key","ResultNothing","Sett","addColumn","col","state","e","getElementById","radio1","checked","radio2","options","selectedIndex","notExistYet","notExistPrimary","dataType","intRange","setState","toast","notify","intRanges","changeRange","changeIntRange","selectedOptioToggle","selectedDataOptionToggle","selectionDontpadToggleOn","selectionDontpadToggleOff","countAdd","createButtonClicked","existSomeCode","dontpadOn","keyPress","bind","colN","replace","arr","removed","keyCode","onClick","toogleCreateTable","htmlFor","onChange","defaultChecked","badge","boundClick","removeFromState","onDoubleClick","tableNameChanged","defaultValue","onKeyDown","columnNameChanged","dontpadInput","step","pushable","name","inputs","controllers","nothing","React","Component","Workbench","Main","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.b77b12c3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Nav(){\r\n    return(\r\n      <div className=\"navBarClass\">\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light rounded\">\r\n        <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExample09\" aria-controls=\"navbarsExample09\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n  \r\n        <div className=\"navbar-collapse collapse\" id=\"navbarsExample09\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">Link</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link disabled\" href=\"#\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown09\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Dropdown</a>\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"dropdown09\">\r\n                <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n          <form className=\"form-inline my-2 my-md-0\">\r\n            <input className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n    )\r\n  }\r\n  \r\nexport default Nav","var data = {\r\n    names: [\"name1\", \"name2\", \"name3\"],\r\n    last: [\"lastn1\", \"lastn2\", \"lastn3\"],\r\n    cities: [\"city1\", \"city2\", \"city3\"],\r\n    countries: [\"country1\", \"country2\", \"country3\"]\r\n}\r\n\r\nexport default data;","import React from 'react';\r\nimport '../index.css';\r\nimport data from '../jsonInfo';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport Slider from 'rc-slider';\r\nimport Tooltip from 'rc-tooltip';\r\n\r\n\r\nvar tab = \"    \";\r\n\r\n\r\nconst Handle = Slider.Handle;\r\n\r\nconst handle = (props) => {\r\n  const { value, dragging, index, ...restProps } = props;\r\n  return (\r\n    <Tooltip\r\n      prefixCls=\"rc-slider-tooltip\"\r\n      overlay={value}\r\n      visible={dragging}\r\n      placement=\"top\"\r\n      key={index}\r\n    >\r\n      <Handle value={value} {...restProps} />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\n\r\n\r\nclass Insert {\r\n\tstatic numbers_random(min, max) {\r\n\t\treturn Math.ceil(Math.random() * (max - min) + min);\r\n\t  }\r\n\tstatic numbers_float(){\r\n\t\treturn (Math.random() * (100 - 0) + 0).toFixed(4);\r\n\t}\r\n\tstatic numbers() {\r\n\t\treturn Math.ceil(Math.random() * (1000 - 0) + 0);\r\n\t}\r\n\tstatic date(){\r\n        var m = this.numbers_random(1, 12);\r\n        var d = this.numbers_random(1, 29);\r\n        if(m < 10){\r\n            m = \"0\" + m;\r\n        }\r\n        if(d < 10){\r\n            d = \"0\" + d;\r\n        }\r\n\t\tvar d = this.numbers_random(2000, 2019) + \".\" + m + \".\" + d; \r\n\t\treturn  \"'\" + d + \"'\";\r\n  }\r\n  static time(){\r\n    var t = this.numbers_random(0, 23) + \".\" + this.numbers_random(0, 59) + \".\" + this.numbers_random(0, 59);\r\n    return \"'\" + t + \"'\";\r\n  }\r\n  static dateTime(){\r\n    var d = this.numbers_random(2000, 2019) + \".\" + this.numbers_random(1, 12) + \".\" + this.numbers_random(1, 29); \r\n    var t = this.numbers_random(0, 23) + \".\" + this.numbers_random(0, 59) + \".\" + this.numbers_random(0, 59);\r\n    return \"'\" + d + \" \" + t + \"'\";\r\n  }\r\n  \r\n  /**\r\n   * Nvarchar:\r\n  **/\r\n  static getName(){\r\n    return data.names[Math.ceil(Math.random() * ((data.names.length-1) - 0) + 0)];\r\n  }\r\n  static getLastName(){\r\n    return data.last[Math.ceil(Math.random() * ((data.last.length-1) - 0) + 0)];\r\n  }\r\n  static getCity(){\r\n    return data.cities[Math.ceil(Math.random() * ((data.cities.length-1) - 0) + 0)];\r\n  }\r\n  static getCountry(){\r\n    return data.countries[Math.ceil(Math.random() * ((data.countries.length-1) - 0) + 0)];\r\n  }\r\n  static getDontpadLink(){\r\n    const dontpad = require('dontpad-api');\r\n    const dontPadTarget = 'reactTestDates'; \r\n\r\n    dontpad.writeContent(dontPadTarget, 'This is a test ')\r\n\r\n  } \r\n}\r\n\r\nfunction Result(props){\r\n  /**\r\n   * Table create\r\n   */\r\n  Insert.getDontpadLink();\r\n\r\n\r\n  var tableName = props.tableName.value;\r\n  \r\n  var columns = \"\\n\";\r\n  var coll = \"\";\r\n\r\n  for(var i = 1; i < props.props.length; i++){\r\n    var radio = \"\";\r\n    if(props.props[i].radio === \"UQ\"){\r\n      radio = \"UNIQUE\";\r\n    }\r\n    if(props.props[i].radio === \"PK\"){\r\n      radio = \"PRIMARY KEY\";\r\n    }\r\n\r\n    var v = props.props.length -1 === i ? \"\" : \", \";\r\n\r\n    columns += tab + props.props[i].colNameValue + \" \" + props.props[i].selectedOption + \" \" + radio + v + \"\\n\";\r\n    coll += props.props[i].colNameValue + v;\r\n  }\r\n\r\n  var createTable = \"CREATE TABLE \" + tableName + \"(\" + columns.toLowerCase() + \")\\nGO\";\r\n\r\n  /**\r\n   * Table insert data\r\n   */\r\n  //SET DATEFORMAT ymd\\nGO \r\n  var insert = \"\\nINSERT INTO \" + props.tableName.value + \"( \" + coll + \") VALUES\\n\";\r\n  var values = [];\r\n\r\n  values.push(insert);\r\n  \r\n  var dontpadIndex = 0;\r\n\r\n  for(var j = 1; j < props.sliderRange; j++){\r\n    var row = \"(\";\r\n    for(var i = 0; i < props.props.length; i++){\r\n      var v = props.props.length -1 === i ? \"\" : \", \";\r\n      \r\n        switch(props.props[i].selectedOption){\r\n          case(\"Bit\"):\r\n            if(Insert.numbers_random(0, 100) % 2 === 0){\r\n                row += 1 + v;                \r\n            }\r\n            else{\r\n                row += 0 + v;\r\n            }\r\n            break;\r\n\r\n          case(\"Tinyint\"):\r\n            row += Insert.numbers_random(0, 255) + v;\r\n            break;\r\n\r\n          case(\"Int\"):\r\n            if(props.props[i].intRangeState){\r\n              var min = props.props[i].min;\r\n              var max = props.props[i].max;\r\n\r\n              row += Insert.numbers_random(min, max) + v;\r\n            }\r\n            else\r\n              if(props.props[i].radio === \"PK\")\r\n                row += j + v;\r\n              else\r\n                row += Insert.numbers() + v;\r\n            break;\r\n\r\n          case(\"Bigint\"):\r\n            row += Insert.numbers() + \"\" + Insert.numbers() + \"\" + Insert.numbers() + v;\r\n            break;\r\n\r\n          case(\"Float\"):\r\n            row += Insert.numbers_float() + v;\r\n            break;\r\n          \r\n          case(\"Date\"):\r\n            row += Insert.date() + v;  \r\n            break;\r\n\r\n          case(\"Time\"):\r\n            row += Insert.time() + v;\r\n            break;\r\n\r\n          case(\"DateTime\"):\r\n            row += Insert.dateTime() + v;\r\n            break;\r\n            \r\n          case(\"Nvarchar\"):\r\n            switch(props.props[i].selectedDataOption){\r\n              case(\"Names\"):\r\n                row += \"'\" + Insert.getName() + \"'\" + v;\r\n                break;\r\n              case(\"Last Name\"):\r\n                row += \"'\" + Insert.getLastName() + \"'\" + v;\r\n                break;\r\n              case(\"Cities\"):\r\n                row += \"'\" + Insert.getCity() + \"'\" + v;\r\n                break;\r\n              case(\"Countries\"):\r\n                row += \"'\" + Insert.getCountry() + \"'\" + v;\r\n                break;\r\n              case(\"Dontpad link\"):\r\n                console.log(\"Under construction\");\r\n                break;  \r\n            }\r\n            break;\r\n\t\t\t}\r\n    }\r\n      \r\n    var vv = props.sliderRange -1 === j ? \"\" : \", \";\r\n    row += \")\" + vv + \"\\n\";\r\n    values.push(row);\r\n    }\r\n  \r\n  var val = \"\";\r\n  for(var i = 0; i < values.length; i++){\r\n    val += values[i];\r\n  }\r\n\r\n\r\n  return(\r\n    <div className=\"flex-fill result\">\r\n      <div className=\"container\">\r\n      <CopyToClipboard text={document.getElementsByClassName(\"textAreaResult\").value}>\r\n      <textarea readOnly\r\n          value={createTable + val}\r\n          className=\"textAreaResult\"\r\n      />\r\n      </CopyToClipboard>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result","import React from 'react'\r\nimport toast from 'toasted-notes';\r\nimport 'toasted-notes/src/styles.css';\r\nimport Result from './Insert.js'\r\nimport Slider, {Range} from 'rc-slider';\r\nimport Tooltip from 'rc-tooltip';\r\n\r\n\r\nconst createSliderWithTooltip = Slider.createSliderWithTooltip;\r\nconst RangeSlider = createSliderWithTooltip(Slider.Range);\r\nconst Handle = Slider.Handle;\r\n\r\nconst handle = (props) => {\r\n  const { value, dragging, index, ...restProps } = props;\r\n  return (\r\n    <Tooltip\r\n      prefixCls=\"rc-slider-tooltip\"\r\n      overlay={value}\r\n      visible={dragging}\r\n      placement=\"top\"\r\n      key={index}\r\n    >\r\n      <Handle value={value} {...restProps} />\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nfunction ResultNothing(){\r\n    return(\r\n      <div className=\"flex-fill flex-center result\">\r\n        <label className=\"resultLabel\">\r\n            There is nothing yet.\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\nclass Sett extends React.Component{\r\n    constructor(){\r\n      super();\r\n      this.countAdd = 0;\r\n      this.state = {\r\n        createButtonClicked: true, ///Change to false\r\n        existSomeCode: true,       ///Change to false\r\n        tableName: \"table1\",\r\n        selectedDataOption: 0,\r\n        sliderRange: 50,\r\n        dataType: false,\r\n        intRange: false,\r\n        intRanges: [-10000, 10000],\r\n        dontpadOn: false,\r\n        columns: [\r\n          {}\r\n      ]\r\n      };\r\n      \r\n      \r\n      this.keyPress = this.keyPress.bind(this);\r\n    }\r\n    \r\n  \r\n  \r\n    toogleCreateTable () {\r\n      if(!this.state.createButtonClicked)\r\n        this.setState(\r\n          {createButtonClicked: true}\r\n        )\r\n    }\r\n  \r\n    notExistYet(colN){\r\n  \r\n      for(var i = 0; i < this.state.columns.length; i++){\r\n        if(this.state.columns[i].colNameValue === colN.toLowerCase())\r\n          return false\r\n      }\r\n    \r\n      return true;\r\n    }\r\n    notExistPrimary(radio){\r\n      if(radio === \"PK\")\r\n        for(var i = 0; i < this.state.columns.length; i++){\r\n          if(this.state.columns[i].radio === \"PK\")\r\n            return false\r\n        }\r\n    \r\n      return true;\r\n    }\r\n  \r\n    addColumn = () => {\r\n        var col = this.state.columns;\r\n        var e = document.getElementById(\"typeSelection\");\r\n        var radio1 = document.getElementById(\"inlineRadio1\").checked;\r\n        var radio2 = document.getElementById(\"inlineRadio2\").checked;\r\n        var radio = \"\";\r\n        var colNameValue = document.getElementById(\"columnName\").value.toLowerCase();\r\n        var selectedOption = e.options[e.selectedIndex].text;\r\n\r\n\r\n\r\n        if(radio1){\r\n          radio = \"PK\";\r\n        }\r\n        if(radio2){\r\n          radio = \"UQ\";\r\n        }\r\n  \r\n        if(selectedOption === \"Int Range\")\r\n          selectedOption = \"Int\";\r\n  \r\n        if(colNameValue !== \"\" && e.selectedIndex !== 0 && this.notExistYet(colNameValue) && this.notExistPrimary(radio) && !this.state.dataType && !this.state.intRange){\r\n          var intRangeState = false;\r\n          col.push(\r\n            {\r\n              colNameValue,\r\n              selectedOption,\r\n              radio,\r\n              intRangeState\r\n            }\r\n          );          \r\n            //Clear value\r\n            document.getElementById(\"columnName\").value = \"\";\r\n          this.setState(\r\n            {columns: col,\r\n            dataType: false}\r\n            )  \r\n        }\r\n        else if(this.state.dataType && colNameValue !== \"\" && e.selectedIndex !== 0 && this.notExistYet(colNameValue) && this.notExistPrimary(radio)){\r\n          if(document.getElementById(\"typeDataSelection\").options.selectedIndex == 0){\r\n              toast.notify(\"Enter a valid option for nvarchar source\")\r\n          }\r\n          else{\r\n              var d = document.getElementById(\"typeDataSelection\");\r\n              var selectedDataOption = d.options[d.selectedIndex].text;\r\n              var intRangeState = false;\r\n                    \r\n              col.push(\r\n                  {\r\n                  colNameValue,\r\n                  selectedOption,\r\n                  radio,\r\n                  selectedDataOption,\r\n                  intRangeState\r\n                  }\r\n              );   \r\n                      \r\n              //Clear value\r\n              document.getElementById(\"columnName\").value = \"\";\r\n      \r\n              this.setState(\r\n                  {columns: col}\r\n                  )\r\n            }  \r\n          }\r\n        else if(this.state.intRange && colNameValue !== \"\" && e.selectedIndex !== 0 && this.notExistYet(colNameValue) && this.notExistPrimary(radio)){\r\n          var min = this.state.intRanges[0];\r\n          var max = this.state.intRanges[1];\r\n          var intRangeState = true;\r\n  \r\n          col.push(\r\n            {\r\n              colNameValue,\r\n              selectedOption,\r\n              radio,\r\n              intRangeState,\r\n              min,\r\n              max\r\n            }\r\n          );   \r\n                 \r\n            //Clear value\r\n            document.getElementById(\"columnName\").value = \"\";\r\n  \r\n          this.setState(\r\n            {columns: col}\r\n            )  \r\n        }\r\n        else{\r\n          if(colNameValue === \"\"){\r\n            toast.notify(\"Please set an name for your column\");\r\n          }\r\n          else if(e.selectedIndex === 0){\r\n            toast.notify(\"Please set an type for your column\");\r\n          }\r\n          else if(!this.notExistYet(colNameValue)){\r\n            toast.notify(\"This column already exist\");\r\n          }\r\n          else if(!this.notExistPrimary(radio)){\r\n            toast.notify(\"There can be only one Primary Key\");\r\n          }\r\n        }\r\n    }\r\n  \r\n    \r\n    changeRange = (props) => {\r\n      console.log(props);\r\n      this.setState(\r\n        {sliderRange: props}\r\n      );\r\n    }\r\n    changeIntRange = (props) => {\r\n      console.log(props);\r\n      this.setState(\r\n        {intRanges: props}\r\n      )\r\n    }\r\n  \r\n  \r\n    \r\n    tableNameChanged(){\r\n      var d = document.getElementById(\"tableName\");\r\n      d.value = d.value.replace(' ', '');\r\n      d.value = d.value.replace(',', '');\r\n      d.value = d.value.replace('.', '');\r\n      this.setState(\r\n        {tableName: d}\r\n      )\r\n    }\r\n    columnNameChanged(){\r\n      var d = document.getElementById(\"columnName\");\r\n      d.value = d.value.replace(' ', '');\r\n      d.value = d.value.replace(',', '');\r\n      d.value = d.value.replace('.', '');\r\n    }\r\n    selectionDontpadToggleOn(){\r\n      this.setState(\r\n        {dontpadOn: true}\r\n      )\r\n    }\r\n    selectionDontpadToggleOff(){\r\n      this.setState(\r\n        {dontpadOn: false}\r\n      )\r\n    }\r\n    selectedOptioToggle = () => {\r\n      var e = document.getElementById(\"typeSelection\");\r\n      var selectedOption = e.options[e.selectedIndex].text;\r\n      if(selectedOption === \"Nvarchar\"){\r\n        this.setState({\r\n          dataType: true\r\n        })\r\n      }\r\n      else{\r\n        this.setState({\r\n          dataType: false\r\n        })\r\n      }\r\n  \r\n      if(selectedOption === \"Int Range\"){\r\n        this.setState({\r\n          intRange: true\r\n        })\r\n      }\r\n      else{\r\n        this.setState({\r\n          intRange: false\r\n        })\r\n      }\r\n    }\r\n    selectedDataOptionToggle = () => {\r\n  \r\n      var e = document.getElementById(\"typeDataSelection\");\r\n      var selectedOption = e.options[e.selectedIndex].text;\r\n  \r\n      if(selectedOption === \"Dontpad link\"){\r\n        this.selectionDontpadToggleOn();\r\n      }\r\n      else{\r\n        this.selectionDontpadToggleOff();      \r\n      }\r\n    }\r\n  \r\n  \r\n    removeFromState(index){\r\n      console.log(index);\r\n  \r\n      var arr = this.state.columns;\r\n      var removed = [];\r\n      \r\n      for(var i = 0; i < arr.length; i++){\r\n        if(i != index){\r\n          removed.push(arr[i]);\r\n        }\r\n      }\r\n  \r\n      this.setState(\r\n      {columns: removed}\r\n      );\r\n    }\r\n    \r\n\r\n    keyPress(e){\r\n      if(e.keyCode == 13){\r\n         this.addColumn();\r\n      }\r\n   }\r\n    \r\n  \r\n  \r\n    nothing (){\r\n      return(\r\n        <div className=\"nothing flex-center\">\r\n          <button className=\"btn btn-primary\" onClick={this.toogleCreateTable.bind(this)}>Create table</button>\r\n        </div>\r\n      )\r\n    }\r\n  \r\n    dataType(){\r\n      return(\r\n        <>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Data Type</label>\r\n            </div>\r\n            <select className=\"custom-select\" id=\"typeDataSelection\" onChange={this.selectedDataOptionToggle}>\r\n              <option defaultChecked value=\"0\">Choose...</option>\r\n              <option value=\"1\">Names</option>\r\n              <option value=\"2\">Last Name</option>\r\n              <option value=\"3\">Cities</option>\r\n              <option value=\"4\">Countries</option>\r\n              <option value=\"5\">Dontpad link</option>\r\n            </select>\r\n          </div>\r\n        </>\r\n      )\r\n    }\r\n    dontpadInput(){\r\n      return (\r\n        <div>\r\n           <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">Link</span>\r\n            </div>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Dontpad Link\" aria-label=\"dontpadLink\" id=\"dontpadLink\"/>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  \r\n    inputs(){\r\n      var col = [];\r\n  \r\n      for(var i = 1; i < this.state.columns.length; i++){  \r\n        var badge = this.state.columns[i].selectedOption;\r\n        let boundClick = this.removeFromState.bind(this, i);\r\n  \r\n        col.push(\r\n          <li key={i} className=\"list-group-item d-flex justify-content-between align-items-center\" onDoubleClick={boundClick}>\r\n            {this.state.columns[i].colNameValue} {badge} {this.state.columns[i].radio}\r\n          <span className=\"badge badge-primary badge-pill\">{badge}</span>\r\n        </li>);\r\n            \r\n      };\r\n  /**\r\n   * \r\n  \r\n    <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" htmlFor=\"inputGroupSelect02\">Data Type</label>\r\n            </div>\r\n            <select className=\"custom-select\" id=\"datatypeSelection\">\r\n              <option defaultChecked>Choose...</option>\r\n              <option value=\"1\">Number </option>\r\n              <option value=\"2\">Random number 1 - 1000</option>\r\n              <option value=\"4\">Date now</option>\r\n              <option value=\"5\">Date Time</option>\r\n            </select>\r\n          </div>\r\n  \r\n  \r\n   */\r\n  \r\n      return(\r\n        <>\r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend tableName\">\r\n              <span className=\"input-group-text\" >Table name</span>\r\n            </div>\r\n            <input type=\"text\" className=\"form-control\" aria-label=\"TableName\" id=\"tableName\" onChange={this.tableNameChanged.bind(this)} />\r\n          </div>\r\n  \r\n          <div className=\"slider\">\r\n            <Slider min={0} max={100} defaultValue={50} handle={handle} onChange={this.changeRange} />\r\n          </div>\r\n  \r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">Column name</span>\r\n            </div>\r\n            <input type=\"text\" className=\"form-control\" placeholder=\"Columns name\" aria-label=\"columnName\" id=\"columnName\" onKeyDown={this.keyPress} onChange={this.columnNameChanged}/>\r\n          </div>\r\n  \r\n          <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n              <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Type</label>\r\n            </div>\r\n            <select className=\"custom-select\" id=\"typeSelection\" onChange={this.selectedOptioToggle}>\r\n              <option defaultChecked>Choose...</option>\r\n              <option value=\"1\">Bit</option>\r\n              <option value=\"2\">Tinyint</option>\r\n              <option value=\"3\">Int</option>\r\n              <option value=\"4\">Bigint</option>\r\n              <option value=\"5\">Float</option>\r\n              <option value=\"6\">Date</option>\r\n              <option value=\"7\">Time</option>\r\n              <option value=\"8\">DateTime</option>\r\n              <option value=\"11\">Nvarchar</option>\r\n              <option value=\"12\">Int Range</option>\r\n            </select>\r\n          </div>\r\n  \r\n          {this.state.dataType ? this.dataType() : \"\"}\r\n          {this.state.dontpadOn ? this.dontpadInput() : \"\"}\r\n          {this.state.intRange ? \r\n              <Range defaultValue={[0, 600]} min={-1000} max={5000} step={100} handle={handle} pushable={true} onChange={this.changeIntRange} />\r\n          : \"\" }\r\n          <div className=\"radioButtonGroup\">\r\n            <div className=\"form-check form-check-inline\">\r\n              <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"option1\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio1\">Primary Key</label>\r\n            </div>\r\n            <div className=\"form-check form-check-inline\">\r\n              <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"option2\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio2\">Unique</label>\r\n            </div>\r\n            <div className=\"form-check form-check-inline\">\r\n              <input className=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio3\" value=\"option3\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"inlineRadio3\">None</label>\r\n            </div>\r\n          </div>\r\n  \r\n          <button type=\"button\" className=\"btn btn-success btn-lg btn-block addColumn\" id=\"addColumn\" onClick={this.addColumn}>Add column</button>\r\n  \r\n        <ul className=\"list-group col-list-group\">\r\n          {col}\r\n        </ul>\r\n  \r\n      </>\r\n  \r\n      )\r\n    }\r\n  \r\n    controllers(){\r\n      return(\r\n        <div>\r\n          {this.inputs()}\r\n        </div>\r\n      )\r\n    }\r\n  \r\n    render() {\r\n      return(\r\n        <div className=\"d-flex workbench\">\r\n          <div className={\r\n            this.state.createButtonClicked ? \"flex-fill sett container\" : \"flex-fill flex-center sett\"}>\r\n            {\r\n            this.state.createButtonClicked ? \r\n            this.controllers() :\r\n            this.nothing()\r\n            }\r\n          </div>\r\n          {this.state.existSomeCode ? <Result props={this.state.columns} tableName={this.state.tableName} sliderRange={this.state.sliderRange}/> : <ResultNothing />  } \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Sett","import React from 'react';\nimport '../index.css';\nimport 'react-spring';\nimport 'rc-slider/assets/index.css';\nimport 'rc-tooltip/assets/bootstrap.css';\nimport Nav from './Nav.js'\nimport Sett from './Sett.js'\n\n\nfunction Workbench(){\n  return(\n    <div>\n      <Sett />\n    </div>\n  );\n}\n\nfunction Main(){\n  return (\n\n    <div className=\"container\">\n      <Nav />\n      <Workbench />\n    </div>\n\n  );\n}\n\n\nfunction App() {\n  return (\n    <div className=\"divRoot\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n/**\n * TODO:\n * \n * Add dontpad link with data for columns\n * In donpad will be like \"data1 data2 data3\" \n * And then with .split(\" \")\n * \n * \n * \n * If is more than 5+ columns in list, change css style for height\n * \n * \n * \n * \n * Copy to clipboard button (fix)\n * \n */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from  './components/App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  );\n  \n  \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}